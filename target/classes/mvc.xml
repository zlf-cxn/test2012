<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/mvc
                http://www.springframework.org/schema/mvc/spring-mvc.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd">
    <!--注解扫描-->
    <context:component-scan base-package="com.zlf" use-default-filters="false">
        <!--只扫描com.zlf.web下的Controller-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--注解驱动-->
    <mvc:annotation-driven>
        <!--安装FastJson，转换器-->
        <mvc:message-converters>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <!--声明转换类型：json-->
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--视图解析器
        作用：1.捕获后端控制器的返回值："hello"
             2.解析,在返回值上拼接前后缀===》"/hello.jsp"
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"></property><!--前缀-->
        <property name="suffix" value=".jsp"></property><!--后缀-->
    </bean>
    <!--额外增加一个handler，且其RequestMapping："/**"（任意多级目录资源）,可以匹配所有请求，但其优先级最低
    所以如果其他所有的handler都匹配不上，请求会转向"/**",恰好，这个handle是处理静态资源的，请求会转到tomcat中
    名为default的servlet-->
    <mvc:default-servlet-handler/>
    <!--<mvc:resources mapping="/html/**" location="/page/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>-->

</beans>